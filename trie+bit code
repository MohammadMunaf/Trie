class Solution {
class Node{
    public:
    char val;
    Node*zero;
    Node*one;
    bool terminate;
    Node(char val){
        this->val=val;
        terminate=false;
        zero=NULL;
        one=NULL;
    }
};
class Trie{
    Node*root;
    public:
    Trie(){
        root=new Node('\0');
    }
    void insert(int w){
        Node*temp=root;
        for(int i=31;i>=0;i--){
            int bit=((w>>i)&1);
            if(bit==1){
                if(temp->one==NULL){
                    Node*n=new Node('1');
                    temp->one=n;
                    temp=temp->one;
                }else temp=temp->one;
            }else {
                if(temp->zero==NULL){
                    Node*n=new Node('0');
                    temp->zero=n;
                    temp=temp->zero;
                }else temp=temp->zero;
            }
        }
        temp->terminate=true;
    }
    int maxVal(int n){
        Node*temp=root;
        int x=0,i;
        for(i=31;i>=0;i--){
            if(temp->val!='\0'){
                if(temp->val=='1'){
                    int j=i+1;
                    x=(x|(1<<j));
                }
            }
            int bit=((n>>i)&1);
            if(bit==0){
                if(temp->one!=NULL){
                    temp=temp->one;
                }else {
                    temp=temp->zero;
                }
            }else{
                if(temp->zero!=NULL){
                    temp=temp->zero;
                }else temp=temp->one;
            }
        }
        if(temp->val=='1'){
            x=(x|(1<<0));
        }
        return x;
    }
};
